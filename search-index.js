var searchIndex = JSON.parse('{\
"api":{"doc":"","t":[17,3,0,11,11,0,11,11,5,5,11,11,5,5,11,0,0,11,11,11,11,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,5,11,11,12,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,0,0,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,12,11,11,11,11,11,12,12,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,12,12,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,3,3,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,6,5,5,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MIGRATIONS","SkipGraphiQL","auth","borrow","borrow_mut","database","from","from_request","graphiql","graphql_request","into","into_collection","launch","main","mapped","models","schema","try_from","try_into","type_id","vzip","0","AdminGuard","ApiKey","ClientGuard","ServerGuard","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check","fmt","from","from","from","from","from_request","id","id","into","into","into","into","into_collection","into_collection","into_collection","into_collection","jwt","mapped","mapped","mapped","mapped","new","new","new","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","Claims","Secret","borrow","borrow","borrow_mut","borrow_mut","deserialize","encode_jwt","exp","fmt","from","from","into","into","into_collection","into_collection","mapped","mapped","new","new","role","serialize","sub","try_from","try_from","try_into","try_into","type_id","type_id","valid_token","vzip","vzip","0","DatabaseConn","DatabaseConnection","DatabasePool","borrow","borrow_mut","from","get","into","into_collection","mapped","new","try_from","try_into","type_id","vzip","Client","DnsServer","Keypair","Server","VpnIp","VpnNetwork","client","dns_server","keypair","server","user","vpn_ip","vpn_network","Client","NewClient","allowed_ips","as_raw_value","borrow","borrow","borrow_mut","borrow_mut","configuration","create_type_info","create_type_info","description","description","description","dns_server","dns_server_id","from","from","from","id","id","into","into","into_collection","into_collection","keepalive","keepalive","keepalive","keypair","keypair_id","mapped","mapped","name","name","name","parse","resolve","resolve_field","to_value","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","vpn_ip","vpn_ip","vzip","vzip","DnsServer","NewDnsServer","as_raw_value","borrow","borrow","borrow_mut","borrow_mut","create_type_info","create_type_info","description","description","description","from","from","from","id","id","into","into","into_collection","into_collection","ip","ip","ip","mapped","mapped","name","name","name","parse","resolve","resolve_field","to_value","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","vzip","vzip","Keypair","borrow","borrow_mut","create_type_info","from","from","id","id","into","into_collection","mapped","private_key","private_key","public_key","public_key","resolve","resolve_field","try_from","try_into","type_id","type_name","vzip","NewServer","Server","as_raw_value","borrow","borrow","borrow_mut","borrow_mut","configuration","create_type_info","create_type_info","description","description","description","external_ip","external_ip","external_ip","forward_interface","forward_interface","forward_interface","from","from","from","id","id","into","into","into_collection","into_collection","keypair","keypair_id","mapped","mapped","name","name","name","parse","resolve","resolve_field","to_value","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","vpn_ip","vpn_ip","vzip","vzip","NewUser","as_raw_value","borrow","borrow_mut","create_type_info","from","into","into_collection","mapped","parse","password","role","to_value","try_from","try_into","type_id","type_name","username","vzip","NewVpnIp","VpnIp","address","address","address","as_raw_value","borrow","borrow","borrow_mut","borrow_mut","create_type_info","create_type_info","from","from","from","id","id","into","into","into_collection","into_collection","mapped","mapped","parse","resolve","resolve_field","to_value","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","vpn_network","vpn_network_id","vzip","vzip","NewVpnNetwork","VpnNetwork","as_raw_value","borrow","borrow","borrow_mut","borrow_mut","create_type_info","create_type_info","from","from","from","id","id","interface","interface","interface","into","into","into_collection","into_collection","mapped","mapped","network","network","network","parse","port","port","port","resolve","resolve_field","subnetmask","subnetmask","subnetmask","to_value","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","vzip","vzip","WireguardSchema","build_schema","get_db_connection","mutation","query","Mutation","assign_allowed_ip","borrow","borrow_mut","change_password","create_type_info","find_entity","from","generate_administrator","generate_keypair","generate_token_for_client","generate_token_for_server","into","into_collection","login","mapped","new_client","new_dns_server","new_server","new_vpn_network","resolve","resolve_field","try_from","try_into","type_id","type_name","vzip","QueryRoot","borrow","borrow_mut","client","create_type_info","dns_server","find_entity","from","into","into_collection","keypair","mapped","resolve","resolve_field","server","try_from","try_into","type_id","type_name","vpn_ip","vpn_network","vzip"],"q":["api","","","","","","","","","","","","","","","","","","","","","api::auth","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","api::auth::jwt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","api::database","","","","","","","","","","","","","","","","api::models","","","","","","","","","","","","","api::models::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","api::models::dns_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","api::models::keypair","","","","","","","","","","","","","","","","","","","","","","api::models::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","api::models::user","","","","","","","","","","","","","","","","","","","api::models::vpn_ip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","api::models::vpn_network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","api::schema","","","","","api::schema::mutation","","","","","","","","","","","","","","","","","","","","","","","","","","","api::schema::query","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Representation of the database connection layer","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Holds all the necessary parts for the schema","","","","","","This guard protects all endpoints that should only be …","Holds the API key from the <code>Token</code> header","This guard protects the configuration attribute of the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Claims for a JWT","Used to store the secret for enrcypting/signing the JWT …","","","","","","Generates a JWT for the given claims","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Creates a new claim with a expiration time of 10 minutes","","","","","","","","","","Validates a JWT token","","","","This struct is responsible for the database connection pool","Single connection to the database","Pool for database connections","","","Returns the argument unchanged.","Returns a single connection from the connection pool","Calls <code>U::from(self)</code>.","","","Creates a new connection pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","GraphQL schema of the API","Creates a schema and returns it","Returns a connection from the database pool","","Queries in the GraphQL schema","","Assigns an allowed IP to a client","","","Changes the password for the given username","","","Returns the argument unchanged.","Creates a new administrator account","Generates a keypair","Assign a token to the given client","Assign a token to the given server","Calls <code>U::from(self)</code>.","","Returns a token for an user","","Creates a client","Creates a DNS Server","Creates a server","Creates a VPN network","","","","","","","","The root of the query type","","","Returns the requested client","","Returns the requested dns server","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Returns the requested keypair","","","","Returns the requested server","","","","","Returns the requested VPN IP address","Returns the requested VPN network",""],"i":[0,0,0,5,5,0,5,5,0,0,5,5,0,0,5,0,0,5,5,5,5,10,0,0,0,0,16,18,19,10,16,18,19,10,16,18,19,10,16,18,19,10,10,18,19,16,18,19,10,16,18,19,10,0,16,18,19,10,16,18,19,16,18,19,10,16,18,19,10,16,18,19,10,16,18,19,10,26,0,0,26,23,26,23,23,0,23,23,26,23,26,23,26,23,26,23,26,23,23,23,23,26,23,26,23,26,23,0,26,23,28,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,33,32,33,32,33,32,32,33,32,32,33,32,33,32,32,33,32,32,32,33,32,33,32,32,33,32,33,32,33,32,32,33,33,32,32,33,32,33,32,33,32,33,32,33,32,33,32,33,0,0,42,43,42,43,42,43,42,43,43,42,43,43,42,43,43,43,42,43,42,43,43,42,43,42,43,43,42,42,43,43,42,43,42,43,42,43,42,43,42,43,42,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,47,48,47,48,47,48,48,47,48,48,47,48,48,47,48,48,47,48,48,47,48,48,48,47,48,47,48,47,48,47,48,48,47,47,48,48,47,48,47,48,47,48,47,48,47,48,47,48,47,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,51,51,52,52,51,52,51,52,51,52,51,51,52,51,51,51,52,51,52,51,52,52,51,51,52,51,52,51,52,51,52,51,52,51,52,51,52,0,0,54,56,54,56,54,56,54,56,56,54,56,56,56,56,54,56,54,56,54,56,54,56,56,54,54,56,56,54,56,56,56,56,54,54,56,54,56,54,56,54,56,54,56,54,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":[0,0,0,[[]],[[]],0,[[]],[1,[[4,[[3,[2]]]]]],[5,[[7,[6]]]],[[8,9,10],2],[[]],[[],11],[[],[[13,[12]]]],[[]],[[],11],0,0,[[],14],[[],14],[[],15],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,17],[[4,[[3,[2]]]]]],[[18,17],[[4,[[3,[2]]]]]],[[19,17],[[4,[[3,[2]]]]]],[[10,20],21],[[]],[[]],[[]],[[]],[1,[[4,[[3,[2]]]]]],0,0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],0,[[],11],[[],11],[[],11],[[],11],[[],16],[22,18],[22,19],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],[[14,[23]]]],[[23,24],[[25,[6]]]],0,[[23,20],21],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[24,26],[[6,22],23],0,[23,14],0,[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[24,24],27],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[28,[[25,[[31,[[30,[29]]]]]]]],[[]],[[],11],[[],11],[24,[[25,[28]]]],[[],14],[[],14],[[],15],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[32,17],2],[33,34],[[]],[[]],[[]],[[]],[[32,17],2],[35,6],[35,6],[[32,17],2],0,0,[[32,17],2],0,[[]],[36,32],[[]],[[32,17],2],0,[[]],[[]],[[],11],[[],11],[[32,17],2],0,0,[[32,17],2],0,[[],11],[[],11],[[32,17],2],0,0,[[[34,[37]]],[[38,[33]]]],[[32,39,40],[[4,[[3,[2]]]]]],[[32,17],[[4,[[3,[2]]]]]],[33,37],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],[[41,[24]]]],[[],[[41,[24]]]],[[32,17],2],0,[[]],[[]],0,0,[42,34],[[]],[[]],[[]],[[]],[35,6],[35,6],[[43,17],2],0,0,[[]],[44,43],[[]],[[43,17],2],0,[[]],[[]],[[],11],[[],11],[[43,17],2],0,0,[[],11],[[],11],[[43,17],2],0,0,[[[34,[37]]],[[38,[42]]]],[[43,39,40],[[4,[[3,[2]]]]]],[[43,17],[[4,[[3,[2]]]]]],[42,37],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],[[41,[24]]]],[[],[[41,[24]]]],[[]],[[]],0,[[]],[[]],[35,6],[[]],[45,46],[[46,17],2],0,[[]],[[],11],[[],11],[[46,17],2],0,[[46,17],2],0,[[46,39,40],[[4,[[3,[2]]]]]],[[46,17],[[4,[[3,[2]]]]]],[[],14],[[],14],[[],15],[[],[[41,[24]]]],[[]],0,0,[47,34],[[]],[[]],[[]],[[]],[[48,17],2],[35,6],[35,6],[[48,17],2],0,0,[[48,17],2],0,0,[[48,17],2],0,0,[49,48],[[]],[[]],[[48,17],2],0,[[]],[[]],[[],11],[[],11],[[48,17],2],0,[[],11],[[],11],[[48,17],2],0,0,[[[34,[37]]],[[38,[47]]]],[[48,39,40],[[4,[[3,[2]]]]]],[[48,17],[[4,[[3,[2]]]]]],[47,37],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],[[41,[24]]]],[[],[[41,[24]]]],[[48,17],2],0,[[]],[[]],0,[50,34],[[]],[[]],[35,6],[[]],[[]],[[],11],[[],11],[[[34,[37]]],[[38,[50]]]],0,0,[50,37],[[],14],[[],14],[[],15],[[],[[41,[24]]]],0,[[]],0,0,[[51,17],2],0,0,[52,34],[[]],[[]],[[]],[[]],[35,6],[35,6],[[]],[53,51],[[]],[[51,17],2],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[[34,[37]]],[[38,[52]]]],[[51,39,40],[[4,[[3,[2]]]]]],[[51,17],[[4,[[3,[2]]]]]],[52,37],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],[[41,[24]]]],[[],[[41,[24]]]],[[51,17],2],0,[[]],[[]],0,0,[54,34],[[]],[[]],[[]],[[]],[35,6],[35,6],[55,56],[[]],[[]],[[56,17],2],0,[[56,17],2],0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[56,17],2],0,0,[[[34,[37]]],[[38,[54]]]],[[56,17],2],0,0,[[56,39,40],[[4,[[3,[2]]]]]],[[56,17],[[4,[[3,[2]]]]]],[[56,17],2],0,0,[54,37],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],[[41,[24]]]],[[],[[41,[24]]]],[[]],[[]],0,[[28,26],[[60,[57,58,59]]]],[17,[[25,[[31,[[30,[29]]]]]]]],0,0,0,[[58,17,22,6],2],[[]],[[]],[[58,17,6,6,6],2],[35,6],[[58,17,37],[[4,[[3,[2]]]]]],[[]],[[58,17,50],2],[[58,17],2],[[58,17,22],2],[[58,17,22],2],[[]],[[],11],[[58,17,6,6],2],[[],11],[[58,17,33],2],[[58,17,42],2],[[58,17,47],2],[[58,17,54],2],[[58,39,40],[[4,[[3,[2]]]]]],[[58,17],[[4,[[3,[2]]]]]],[[],14],[[],14],[[],15],[[],[[41,[24]]]],[[]],0,[[]],[[]],[[57,17,22],2],[35,6],[[57,17,22],2],[[57,17,37],[[4,[[3,[2]]]]]],[[]],[[]],[[],11],[[57,17,22],2],[[],11],[[57,39,40],[[4,[[3,[2]]]]]],[[57,17],[[4,[[3,[2]]]]]],[[57,17,22],2],[[],14],[[],14],[[],15],[[],[[41,[24]]]],[[57,17,22],2],[[57,17,22],2],[[]]],"p":[[3,"Request"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"SkipGraphiQL"],[3,"String"],[3,"RawHtml"],[3,"State"],[3,"GraphQLRequest"],[3,"ApiKey"],[3,"SmallVec"],[4,"Build"],[3,"Rocket"],[4,"Result"],[3,"TypeId"],[3,"AdminGuard"],[6,"Context"],[3,"ClientGuard"],[3,"ServerGuard"],[3,"Formatter"],[6,"Result"],[15,"i32"],[3,"Claims"],[15,"str"],[6,"Result"],[3,"Secret"],[15,"bool"],[3,"DatabaseConn"],[3,"PgConnection"],[3,"ConnectionManager"],[3,"PooledConnection"],[3,"Client"],[3,"NewClient"],[4,"Option"],[3,"Registry"],[3,"Client"],[4,"ConstValue"],[6,"InputValueResult"],[6,"ContextSelectionSet"],[3,"Positioned"],[4,"Cow"],[3,"NewDnsServer"],[3,"DnsServer"],[3,"DnsServer"],[3,"Keypair"],[3,"Keypair"],[3,"NewServer"],[3,"Server"],[3,"Server"],[3,"NewUser"],[3,"VpnIp"],[3,"NewVpnIp"],[3,"VpnIp"],[3,"NewVpnNetwork"],[3,"VpnNetwork"],[3,"VpnNetwork"],[3,"QueryRoot"],[3,"Mutation"],[3,"EmptySubscription"],[3,"Schema"]]},\
"client":{"doc":"","t":[3,13,3,13,4,12,12,11,11,11,11,11,11,11,11,11,11,0,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,12,12,11,11,11,5,12,11,0,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,0,11,11,11,11,11,6,3,6,6,6,17,17,3,3,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,0,11,11,11,6,6,6,6,17,17,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11],"n":["Arguments","Client","Configuration","Server","Type","address","api_key","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_configuration","client_configuration_query","command","command_for_update","configuration_path","default","deserialize","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_and_write_wg_config","get_request","group_id","has_subcommand","id","interface_name","interval","into","into","into","main","restart_wireguard","serialize","server_configuration","server_configuration_query","try_from","try_from","try_from","try_into","try_into","try_into","type","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","ClientConfiguration","borrow","borrow_mut","build_query","client_configuration","from","into","try_from","try_into","type_id","Boolean","ClientConfigurationClient","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","Variables","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","client_id","configuration","deserialize","deserialize","from","from","from","into","into","into","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ServerConfiguration","borrow","borrow_mut","build_query","from","into","server_configuration","try_from","try_into","type_id","Boolean","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","ServerConfigurationServer","Variables","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","configuration","deserialize","deserialize","fmt","fmt","from","from","from","into","into","into","serialize","server","server_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","client::client_configuration","","","","","","","","","","client::client_configuration::client_configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","client::server_configuration","","","","","","","","","","client::server_configuration::server_configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Get configuration for a client","","Get configuration for a server","","","","","","","","","","","","","","","Requests the configuration of the client and returns it","","","Path to the configuration file","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Writes the configuration to the file and restarts the …","Basic request builder","","","","","How often the client should check for configuration …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether the wireguard client should be restarted after a …","","","Requests the configuration of the server and returns it","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,8,0,8,0,2,2,5,5,8,8,5,8,2,5,8,2,0,0,5,5,5,2,2,5,8,5,8,2,5,8,5,8,0,0,5,8,2,2,5,5,8,2,0,5,2,0,0,5,8,2,5,8,2,5,5,8,2,5,8,5,8,0,24,24,24,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,20,18,19,20,18,19,18,20,19,18,19,20,18,19,20,18,19,20,20,18,19,20,18,19,20,18,19,0,25,25,25,25,25,0,25,25,25,0,0,0,0,0,0,0,0,0,23,21,22,23,21,22,22,21,22,21,22,23,21,22,23,21,22,23,21,23,23,21,22,23,21,22,23,21,22],"f":[0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],0,[2,3],[[],1],[[],1],0,[[],2],[[],[[4,[2]]]],[[5,6],7],[[8,6],7],[[]],[[]],[[]],[9,[[4,[5,10]]]],[9,[[4,[8,10]]]],[9,[[4,[5,10]]]],[9,[[4,[8,10]]]],[[5,2],3],[2,11],[[],[[13,[12]]]],[14,15],0,0,0,[[]],[[]],[[]],[[]],0,[2,4],0,[2,3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[],16],[[],16],[[],16],[[5,9],[[4,[10]]]],[[8,9],[[4,[10]]]],[[5,9],[[4,[10]]]],[[8,9],[[4,[10]]]],0,[[]],[[]],[[],17],0,[[]],[[]],[[],4],[[],4],[[],16],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],[[4,[18]]]],[[],[[4,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[20,4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],0,[[]],[[]],[[],17],[[]],[[]],0,[[],4],[[],4],[[],16],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[4,[21]]]],[[],[[4,[22]]]],[[21,6],7],[[22,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[23,4],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16]],"p":[[3,"Command"],[3,"Configuration"],[8,"Future"],[4,"Result"],[3,"Arguments"],[3,"Formatter"],[6,"Result"],[4,"Type"],[3,"ArgMatches"],[6,"Error"],[3,"RequestBuilder"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"TypeId"],[3,"QueryBody"],[3,"ResponseData"],[3,"ClientConfigurationClient"],[3,"Variables"],[3,"ResponseData"],[3,"ServerConfigurationServer"],[3,"Variables"],[3,"ClientConfiguration"],[3,"ServerConfiguration"]]},\
"libwgbuilder":{"doc":"","t":[13,13,4,13,11,11,11,11,11,11,0,11,11,11,11,11,12,12,2,2,2,2,8,2,2,2,2,2,0,0,0,10,0,0,0,0,0,0,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,12,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11],"n":["Database","DatabaseObjectNotFound","Error","Unauthenticated","borrow","borrow_mut","fmt","fmt","from","into","models","to_string","try_from","try_into","type_id","vzip","0","1","AllowedIp","Client","DnsServer","Keypair","Model","Server","Token","User","VpnIp","VpnNetwork","allowed_ip","client","dns_server","find","keypair","server","token","user","vpn_ip","vpn_network","AllowedIp","address","address_exists","assign_ip_to_client","borrow","borrow_mut","build","find","from","get_allowed_ips_for_client","id","into","try_from","try_into","type_id","vzip","Client","NewClient","belonging_to","borrow","borrow","borrow_mut","borrow_mut","build","configuration","create","description","dns_server_id","find","foreign_key","foreign_key","foreign_key","foreign_key","foreign_key","foreign_key","foreign_key_column","foreign_key_column","foreign_key_column","foreign_key_column","foreign_key_column","foreign_key_column","from","from","id","id","id","into","into","keepalive","keypair_id","name","new","table","try_from","try_from","try_into","try_into","type_id","type_id","vpn_ip_id","vzip","vzip","DnsServer","NewDnsServer","borrow","borrow","borrow_mut","borrow_mut","build","create","description","find","from","from","id","into","into","ip","name","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Keypair","NewKeypair","borrow","borrow","borrow_mut","borrow_mut","build","create","find","from","from","generate","id","into","into","new","private_key","public_key","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","NewServer","Server","belonging_to","borrow","borrow","borrow_mut","borrow_mut","build","configuration","create","description","external_ip","find","foreign_key","foreign_key","foreign_key","foreign_key","foreign_key_column","foreign_key_column","foreign_key_column","foreign_key_column","forward_interface","from","from","id","id","id","into","into","keypair_id","name","new","table","try_from","try_from","try_into","try_into","type_id","type_id","vpn_ip_id","vzip","vzip","NewToken","Token","assign_to_client","assign_to_server","borrow","borrow","borrow_mut","borrow_mut","build","create","expires_at","expires_at","from","from","generate","get_client_for_token","get_server_for_token","id","into","into","token","token","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","NewUser","User","borrow","borrow","borrow_mut","borrow_mut","build","create","find_by_username","from","from","id","into","into","new","password","role","try_from","try_from","try_into","try_into","type_id","type_id","update_password","username","vzip","vzip","NewVpnIp","VpnIp","address","belonging_to","borrow","borrow","borrow_mut","borrow_mut","build","create","find","foreign_key","foreign_key","foreign_key_column","foreign_key_column","from","from","id","id","id","into","into","new","table","try_from","try_from","try_into","try_into","type_id","type_id","vpn_network_id","vzip","vzip","NewVpnNetwork","VpnNetwork","borrow","borrow","borrow_mut","borrow_mut","build","create","find","from","from","id","id","id","interface","into","into","network","new","port","subnetmask","table","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["libwgbuilder","","","","","","","","","","","","","","","","libwgbuilder::Error","","libwgbuilder::models","","","","","","","","","","","","","","","","","","","","libwgbuilder::models::allowed_ip","","","","","","","","","","","","","","","","libwgbuilder::models::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libwgbuilder::models::dns_server","","","","","","","","","","","","","","","","","","","","","","","","","","libwgbuilder::models::keypair","","","","","","","","","","","","","","","","","","","","","","","","","","libwgbuilder::models::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libwgbuilder::models::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libwgbuilder::models::user","","","","","","","","","","","","","","","","","","","","","","","","","","","libwgbuilder::models::vpn_ip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libwgbuilder::models::vpn_network","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Allowed IP addresses are used to restrict the traffic into …","Client model","DNS server model","Finds the object for the given <code>search_id</code> in the database","Keypair model","Server model","Tokens for authentication of client and server","An user is allowed to query the API as an administrator or …","VPN IP address","VPN network model","Allowed IP from the database","","This function checks if the given address already exists …","This function assigns the allowed IP address to the given …","","","","","Returns the argument unchanged.","Returns all the allowed IP addresses assigned to the given …","","Calls <code>U::from(self)</code>.","","","","","Client from the database","Client that is not created in the database yet","","","","","","","Returns a wireguard configuration for the client","Creates a new client in the database","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a new client that is ready to be inserted into the …","","","","","","","","","","","DNS server from the database","DNS server that is not created in the database yet","","","","","","Creates a new DNS server in the database","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a new DNS server that is ready to be inserted into …","","","","","","","","","Keypair from the database","A Keypair that is not created in the database yet","","","","","","Creates a new keypair in the database","","Returns the argument unchanged.","Returns the argument unchanged.","Generates a new keypair and inserts it into the database","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a new keypair object that is ready for inserting …","","","","","","","","","","","Server that is not created in the database yet","Server from the database","","","","","","","Returns a wireguard configuration for the server","Creates a new server in the database","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a new server that is ready to be inserted into the …","","","","","","","","","","","","","Assigns a token to the given client","Assigns a token to the given server","","","","","","Creates a token in the database","","","Returns the argument unchanged.","Returns the argument unchanged.","Generates a new random token and creates it in the database","Returns the client for the given token","Returns the server for the given token","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","User that is not created in the database yet","User from the database","","","","","","Creates the user in the database","Searches for a user by its username","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a  new user that is ready to be inserted into the …","","","","","","","","","Updates the password for the given user","","","","A VPN IP address that is not created in the database yet","VPN IP from the database","","","","","","","","Creates a new VPN IP address in the database","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a new VPN IP address object that is ready for …","","","","","","","","","","","VPN network that is not created in the database yet","VPN network from the database","","","","","","Creates a new VPN network in the database","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a new VPN network that is ready to be inserted …","","","","","","","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,11,11,15,11,15,11,11,15,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,15,11,11,11,11,15,11,11,11,15,11,11,15,11,15,11,15,11,11,15,0,0,17,18,17,18,17,18,17,17,17,18,17,17,18,17,17,18,17,18,17,18,17,18,17,18,0,0,19,20,19,20,19,20,19,19,20,20,19,19,20,20,19,19,19,20,19,20,19,20,19,20,0,0,21,21,22,21,22,21,21,22,21,21,21,21,21,21,21,21,21,21,21,21,21,22,21,21,21,21,22,21,21,22,21,21,22,21,22,21,22,21,21,22,0,0,23,23,23,24,23,24,23,24,23,24,23,24,24,23,23,23,23,24,23,24,23,24,23,24,23,24,23,24,0,0,25,26,25,26,25,26,25,25,26,25,25,26,26,25,25,25,26,25,26,25,26,25,25,25,26,0,0,27,27,27,28,27,28,27,28,27,27,27,27,27,27,28,27,27,27,27,28,28,27,27,28,27,28,27,28,27,27,28,0,0,29,30,29,30,29,30,29,29,30,29,29,29,29,29,30,29,30,29,29,29,29,30,29,30,29,30,29,30],"f":[0,0,0,0,[[]],[[]],[[1,2],3],[[1,2],3],[[]],[[]],0,[[],4],[[],5],[[],5],[[],6],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,8],9],0,0,0,0,0,0,0,0,[[10,8],[[9,[7]]]],[[11,10,8],9],[[]],[[]],[[],[[13,[12]]]],[[7,8],[[9,[12]]]],[[]],[[11,8],[[9,[[14,[12]]]]]],0,[[]],[[],5],[[],5],[[],6],[[]],0,0,[14],[[]],[[]],[[]],[[]],[[],[[13,[11]]]],[[11,8],[[9,[4]]]],[[15,8],[[9,[11]]]],0,0,[[7,8],[[9,[11]]]],[11,16],[11,16],[11,16],[11,16],[11,16],[11,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],0,[[]],[[]],0,0,0,[[10,[16,[4]],7,7,7,7],15],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[13,[17]]]],[[18,8],[[9,[17]]]],0,[[7,8],[[9,[17]]]],[[]],[[]],0,[[]],[[]],0,0,[[10,10,[16,[4]]],18],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[13,[19]]]],[[20,8],[[9,[19]]]],[[7,8],[[9,[19]]]],[[]],[[]],[8,[[9,[19]]]],0,[[]],[[]],[[10,10],20],0,0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,0,[14],[[]],[[]],[[]],[[]],[[],[[13,[21]]]],[[21,8],[[9,[4]]]],[[22,8],[[9,[21]]]],0,0,[[7,8],[[9,[21]]]],[21,16],[21,16],[21,16],[21,16],[[]],[[]],[[]],[[]],0,[[]],[[]],[21],[21],0,[[]],[[]],0,0,[[10,[16,[4]],[16,[4]],7,7,10],22],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,[[]],[[]],0,0,[[23,7,8],9],[[23,7,8],9],[[]],[[]],[[]],[[]],[[],[[13,[23]]]],[[24,8],[[9,[23]]]],0,0,[[]],[[]],[8,[[9,[23]]]],[[10,8],[[9,[11]]]],[[10,8],[[9,[21]]]],0,[[]],[[]],0,0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[13,[25]]]],[[26,8],[[9,[25]]]],[[10,8],[[9,[25]]]],[[]],[[]],0,[[]],[[]],[[10,10,7],26],0,0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[25,10,8],[[9,[25]]]],0,[[]],[[]],0,0,0,[14],[[]],[[]],[[]],[[]],[[],[[13,[27]]]],[[28,8],[[9,[27]]]],[[7,8],[[9,[27]]]],[27,16],[27,16],[[]],[[]],[[]],[[]],[27],[27],0,[[]],[[]],[[10,7],28],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[13,[29]]]],[[30,8],[[9,[29]]]],[[7,8],[[9,[29]]]],[[]],[[]],[29],[29],0,0,[[]],[[]],0,[[10,7,7,7],30],0,0,[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]]],"p":[[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"],[15,"i32"],[3,"PgConnection"],[6,"Result"],[15,"str"],[3,"Client"],[3,"AllowedIp"],[6,"Result"],[3,"Vec"],[3,"NewClient"],[4,"Option"],[3,"DnsServer"],[3,"NewDnsServer"],[3,"Keypair"],[3,"NewKeypair"],[3,"Server"],[3,"NewServer"],[3,"Token"],[3,"NewToken"],[3,"User"],[3,"NewUser"],[3,"VpnIp"],[3,"NewVpnIp"],[3,"VpnNetwork"],[3,"NewVpnNetwork"],[13,"DatabaseObjectNotFound"],[8,"Model"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
