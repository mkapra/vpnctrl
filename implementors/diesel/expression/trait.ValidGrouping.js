(function() {var implementors = {};
implementors["libwgbuilder"] = [{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.star.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::star\">star</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;(<a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::id\">id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.address.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::address\">address</a>, <a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.description.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::description\">description</a>): ValidGrouping&lt;__GB&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::allowed_ips::columns::star"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::id\">id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::id\">id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::allowed_ips::columns::id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::id\">id</a>","synthetic":false,"types":["libwgbuilder::schema::allowed_ips::columns::id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.address.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::address\">address</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.address.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::address\">address</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::allowed_ips::columns::address"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.address.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::address\">address</a>","synthetic":false,"types":["libwgbuilder::schema::allowed_ips::columns::address"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.description.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::description\">description</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.description.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::description\">description</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::allowed_ips::columns::description"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/columns/struct.description.html\" title=\"struct libwgbuilder::schema::allowed_ips::columns::description\">description</a>","synthetic":false,"types":["libwgbuilder::schema::allowed_ips::columns::description"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.star.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::star\">star</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;(<a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::id\">id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.allowed_ip_id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::allowed_ip_id\">allowed_ip_id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.client_id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::client_id\">client_id</a>): ValidGrouping&lt;__GB&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::client_allowed_ips::columns::star"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::id\">id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::id\">id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::client_allowed_ips::columns::id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::id\">id</a>","synthetic":false,"types":["libwgbuilder::schema::client_allowed_ips::columns::id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.allowed_ip_id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::allowed_ip_id\">allowed_ip_id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.allowed_ip_id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::allowed_ip_id\">allowed_ip_id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::client_allowed_ips::columns::allowed_ip_id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.allowed_ip_id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::allowed_ip_id\">allowed_ip_id</a>","synthetic":false,"types":["libwgbuilder::schema::client_allowed_ips::columns::allowed_ip_id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.client_id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::client_id\">client_id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.client_id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::client_id\">client_id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::client_allowed_ips::columns::client_id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/columns/struct.client_id.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::columns::client_id\">client_id</a>","synthetic":false,"types":["libwgbuilder::schema::client_allowed_ips::columns::client_id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.star.html\" title=\"struct libwgbuilder::schema::clients::columns::star\">star</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;(<a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.id.html\" title=\"struct libwgbuilder::schema::clients::columns::id\">id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.name.html\" title=\"struct libwgbuilder::schema::clients::columns::name\">name</a>, <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.description.html\" title=\"struct libwgbuilder::schema::clients::columns::description\">description</a>, <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.dns_server_id.html\" title=\"struct libwgbuilder::schema::clients::columns::dns_server_id\">dns_server_id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.keepalive.html\" title=\"struct libwgbuilder::schema::clients::columns::keepalive\">keepalive</a>, <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.keypair_id.html\" title=\"struct libwgbuilder::schema::clients::columns::keypair_id\">keypair_id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::clients::columns::vpn_net_id\">vpn_net_id</a>): ValidGrouping&lt;__GB&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::star"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.id.html\" title=\"struct libwgbuilder::schema::clients::columns::id\">id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.id.html\" title=\"struct libwgbuilder::schema::clients::columns::id\">id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.id.html\" title=\"struct libwgbuilder::schema::clients::columns::id\">id</a>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.name.html\" title=\"struct libwgbuilder::schema::clients::columns::name\">name</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.name.html\" title=\"struct libwgbuilder::schema::clients::columns::name\">name</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::name"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.name.html\" title=\"struct libwgbuilder::schema::clients::columns::name\">name</a>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::name"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.description.html\" title=\"struct libwgbuilder::schema::clients::columns::description\">description</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.description.html\" title=\"struct libwgbuilder::schema::clients::columns::description\">description</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::description"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.description.html\" title=\"struct libwgbuilder::schema::clients::columns::description\">description</a>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::description"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.dns_server_id.html\" title=\"struct libwgbuilder::schema::clients::columns::dns_server_id\">dns_server_id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.dns_server_id.html\" title=\"struct libwgbuilder::schema::clients::columns::dns_server_id\">dns_server_id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::dns_server_id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.dns_server_id.html\" title=\"struct libwgbuilder::schema::clients::columns::dns_server_id\">dns_server_id</a>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::dns_server_id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.keepalive.html\" title=\"struct libwgbuilder::schema::clients::columns::keepalive\">keepalive</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.keepalive.html\" title=\"struct libwgbuilder::schema::clients::columns::keepalive\">keepalive</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::keepalive"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.keepalive.html\" title=\"struct libwgbuilder::schema::clients::columns::keepalive\">keepalive</a>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::keepalive"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.keypair_id.html\" title=\"struct libwgbuilder::schema::clients::columns::keypair_id\">keypair_id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.keypair_id.html\" title=\"struct libwgbuilder::schema::clients::columns::keypair_id\">keypair_id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::keypair_id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.keypair_id.html\" title=\"struct libwgbuilder::schema::clients::columns::keypair_id\">keypair_id</a>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::keypair_id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::clients::columns::vpn_net_id\">vpn_net_id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::clients::columns::vpn_net_id\">vpn_net_id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::vpn_net_id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/clients/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::clients::columns::vpn_net_id\">vpn_net_id</a>","synthetic":false,"types":["libwgbuilder::schema::clients::columns::vpn_net_id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.star.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::star\">star</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;(<a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.id.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::id\">id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.ip.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::ip\">ip</a>, <a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.description.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::description\">description</a>): ValidGrouping&lt;__GB&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::dns_servers::columns::star"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.id.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::id\">id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.id.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::id\">id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::dns_servers::columns::id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.id.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::id\">id</a>","synthetic":false,"types":["libwgbuilder::schema::dns_servers::columns::id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.ip.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::ip\">ip</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.ip.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::ip\">ip</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::dns_servers::columns::ip"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.ip.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::ip\">ip</a>","synthetic":false,"types":["libwgbuilder::schema::dns_servers::columns::ip"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.description.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::description\">description</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.description.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::description\">description</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::dns_servers::columns::description"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/columns/struct.description.html\" title=\"struct libwgbuilder::schema::dns_servers::columns::description\">description</a>","synthetic":false,"types":["libwgbuilder::schema::dns_servers::columns::description"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.star.html\" title=\"struct libwgbuilder::schema::keypairs::columns::star\">star</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;(<a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.id.html\" title=\"struct libwgbuilder::schema::keypairs::columns::id\">id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.priv_key.html\" title=\"struct libwgbuilder::schema::keypairs::columns::priv_key\">priv_key</a>, <a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.pub_key.html\" title=\"struct libwgbuilder::schema::keypairs::columns::pub_key\">pub_key</a>): ValidGrouping&lt;__GB&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::keypairs::columns::star"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.id.html\" title=\"struct libwgbuilder::schema::keypairs::columns::id\">id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.id.html\" title=\"struct libwgbuilder::schema::keypairs::columns::id\">id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::keypairs::columns::id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.id.html\" title=\"struct libwgbuilder::schema::keypairs::columns::id\">id</a>","synthetic":false,"types":["libwgbuilder::schema::keypairs::columns::id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.priv_key.html\" title=\"struct libwgbuilder::schema::keypairs::columns::priv_key\">priv_key</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.priv_key.html\" title=\"struct libwgbuilder::schema::keypairs::columns::priv_key\">priv_key</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::keypairs::columns::priv_key"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.priv_key.html\" title=\"struct libwgbuilder::schema::keypairs::columns::priv_key\">priv_key</a>","synthetic":false,"types":["libwgbuilder::schema::keypairs::columns::priv_key"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.pub_key.html\" title=\"struct libwgbuilder::schema::keypairs::columns::pub_key\">pub_key</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.pub_key.html\" title=\"struct libwgbuilder::schema::keypairs::columns::pub_key\">pub_key</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::keypairs::columns::pub_key"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/keypairs/columns/struct.pub_key.html\" title=\"struct libwgbuilder::schema::keypairs::columns::pub_key\">pub_key</a>","synthetic":false,"types":["libwgbuilder::schema::keypairs::columns::pub_key"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.star.html\" title=\"struct libwgbuilder::schema::servers::columns::star\">star</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;(<a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.id.html\" title=\"struct libwgbuilder::schema::servers::columns::id\">id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.name.html\" title=\"struct libwgbuilder::schema::servers::columns::name\">name</a>, <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.description.html\" title=\"struct libwgbuilder::schema::servers::columns::description\">description</a>, <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.forward_interface.html\" title=\"struct libwgbuilder::schema::servers::columns::forward_interface\">forward_interface</a>, <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::servers::columns::vpn_net_id\">vpn_net_id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.keypair_id.html\" title=\"struct libwgbuilder::schema::servers::columns::keypair_id\">keypair_id</a>): ValidGrouping&lt;__GB&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::star"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.id.html\" title=\"struct libwgbuilder::schema::servers::columns::id\">id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.id.html\" title=\"struct libwgbuilder::schema::servers::columns::id\">id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.id.html\" title=\"struct libwgbuilder::schema::servers::columns::id\">id</a>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.name.html\" title=\"struct libwgbuilder::schema::servers::columns::name\">name</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.name.html\" title=\"struct libwgbuilder::schema::servers::columns::name\">name</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::name"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.name.html\" title=\"struct libwgbuilder::schema::servers::columns::name\">name</a>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::name"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.description.html\" title=\"struct libwgbuilder::schema::servers::columns::description\">description</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.description.html\" title=\"struct libwgbuilder::schema::servers::columns::description\">description</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::description"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.description.html\" title=\"struct libwgbuilder::schema::servers::columns::description\">description</a>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::description"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.forward_interface.html\" title=\"struct libwgbuilder::schema::servers::columns::forward_interface\">forward_interface</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.forward_interface.html\" title=\"struct libwgbuilder::schema::servers::columns::forward_interface\">forward_interface</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::forward_interface"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.forward_interface.html\" title=\"struct libwgbuilder::schema::servers::columns::forward_interface\">forward_interface</a>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::forward_interface"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::servers::columns::vpn_net_id\">vpn_net_id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::servers::columns::vpn_net_id\">vpn_net_id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::vpn_net_id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::servers::columns::vpn_net_id\">vpn_net_id</a>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::vpn_net_id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.keypair_id.html\" title=\"struct libwgbuilder::schema::servers::columns::keypair_id\">keypair_id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.keypair_id.html\" title=\"struct libwgbuilder::schema::servers::columns::keypair_id\">keypair_id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::keypair_id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/servers/columns/struct.keypair_id.html\" title=\"struct libwgbuilder::schema::servers::columns::keypair_id\">keypair_id</a>","synthetic":false,"types":["libwgbuilder::schema::servers::columns::keypair_id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.star.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::star\">star</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;(<a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::id\">id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.address.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::address\">address</a>, <a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::vpn_net_id\">vpn_net_id</a>): ValidGrouping&lt;__GB&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::vpn_ips::columns::star"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::id\">id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::id\">id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::vpn_ips::columns::id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.id.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::id\">id</a>","synthetic":false,"types":["libwgbuilder::schema::vpn_ips::columns::id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.address.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::address\">address</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.address.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::address\">address</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::vpn_ips::columns::address"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.address.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::address\">address</a>","synthetic":false,"types":["libwgbuilder::schema::vpn_ips::columns::address"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::vpn_net_id\">vpn_net_id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::vpn_net_id\">vpn_net_id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::vpn_ips::columns::vpn_net_id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/columns/struct.vpn_net_id.html\" title=\"struct libwgbuilder::schema::vpn_ips::columns::vpn_net_id\">vpn_net_id</a>","synthetic":false,"types":["libwgbuilder::schema::vpn_ips::columns::vpn_net_id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.star.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::star\">star</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;(<a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.id.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::id\">id</a>, <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.address.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::address\">address</a>, <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.subnetmask.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::subnetmask\">subnetmask</a>, <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.port.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::port\">port</a>): ValidGrouping&lt;__GB&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::vpn_nets::columns::star"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.id.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::id\">id</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.id.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::id\">id</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::vpn_nets::columns::id"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.id.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::id\">id</a>","synthetic":false,"types":["libwgbuilder::schema::vpn_nets::columns::id"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.address.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::address\">address</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.address.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::address\">address</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::vpn_nets::columns::address"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.address.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::address\">address</a>","synthetic":false,"types":["libwgbuilder::schema::vpn_nets::columns::address"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.subnetmask.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::subnetmask\">subnetmask</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.subnetmask.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::subnetmask\">subnetmask</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::vpn_nets::columns::subnetmask"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.subnetmask.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::subnetmask\">subnetmask</a>","synthetic":false,"types":["libwgbuilder::schema::vpn_nets::columns::subnetmask"]},{"text":"impl&lt;__GB&gt; ValidGrouping&lt;__GB&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.port.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::port\">port</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__GB: IsContainedInGroupBy&lt;<a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.port.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::port\">port</a>, Output = Yes&gt;,&nbsp;</span>","synthetic":false,"types":["libwgbuilder::schema::vpn_nets::columns::port"]},{"text":"impl ValidGrouping&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/columns/struct.port.html\" title=\"struct libwgbuilder::schema::vpn_nets::columns::port\">port</a>","synthetic":false,"types":["libwgbuilder::schema::vpn_nets::columns::port"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()