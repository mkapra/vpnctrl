(function() {var implementors = {};
implementors["libwgbuilder"] = [{"text":"impl&lt;'a&gt; UndecoratedInsertRecord&lt;<a class=\"struct\" href=\"libwgbuilder/schema/dns_servers/struct.table.html\" title=\"struct libwgbuilder::schema::dns_servers::table\">table</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/models/dns_server/struct.NewDnsServer.html\" title=\"struct libwgbuilder::models::dns_server::NewDnsServer\">NewDnsServer</a>&lt;'a&gt;","synthetic":false,"types":["libwgbuilder::models::dns_server::NewDnsServer"]},{"text":"impl&lt;'a&gt; UndecoratedInsertRecord&lt;<a class=\"struct\" href=\"libwgbuilder/schema/keypairs/struct.table.html\" title=\"struct libwgbuilder::schema::keypairs::table\">table</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/models/keypair/struct.NewKeyPair.html\" title=\"struct libwgbuilder::models::keypair::NewKeyPair\">NewKeyPair</a>&lt;'a&gt;","synthetic":false,"types":["libwgbuilder::models::keypair::NewKeyPair"]},{"text":"impl&lt;'a&gt; UndecoratedInsertRecord&lt;<a class=\"struct\" href=\"libwgbuilder/schema/vpn_nets/struct.table.html\" title=\"struct libwgbuilder::schema::vpn_nets::table\">table</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/models/vpn_net/struct.NewVpnNet.html\" title=\"struct libwgbuilder::models::vpn_net::NewVpnNet\">NewVpnNet</a>&lt;'a&gt;","synthetic":false,"types":["libwgbuilder::models::vpn_net::NewVpnNet"]},{"text":"impl&lt;'a&gt; UndecoratedInsertRecord&lt;<a class=\"struct\" href=\"libwgbuilder/schema/clients/struct.table.html\" title=\"struct libwgbuilder::schema::clients::table\">table</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/models/client/struct.NewClient.html\" title=\"struct libwgbuilder::models::client::NewClient\">NewClient</a>&lt;'a&gt;","synthetic":false,"types":["libwgbuilder::models::client::NewClient"]},{"text":"impl&lt;'a&gt; UndecoratedInsertRecord&lt;<a class=\"struct\" href=\"libwgbuilder/schema/servers/struct.table.html\" title=\"struct libwgbuilder::schema::servers::table\">table</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/models/server/struct.NewServer.html\" title=\"struct libwgbuilder::models::server::NewServer\">NewServer</a>&lt;'a&gt;","synthetic":false,"types":["libwgbuilder::models::server::NewServer"]},{"text":"impl&lt;'a&gt; UndecoratedInsertRecord&lt;<a class=\"struct\" href=\"libwgbuilder/schema/vpn_ips/struct.table.html\" title=\"struct libwgbuilder::schema::vpn_ips::table\">table</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/models/vpn_ip/struct.NewVpnIp.html\" title=\"struct libwgbuilder::models::vpn_ip::NewVpnIp\">NewVpnIp</a>&lt;'a&gt;","synthetic":false,"types":["libwgbuilder::models::vpn_ip::NewVpnIp"]},{"text":"impl&lt;'a&gt; UndecoratedInsertRecord&lt;<a class=\"struct\" href=\"libwgbuilder/schema/allowed_ips/struct.table.html\" title=\"struct libwgbuilder::schema::allowed_ips::table\">table</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/models/allowed_ip/struct.NewAllowedIp.html\" title=\"struct libwgbuilder::models::allowed_ip::NewAllowedIp\">NewAllowedIp</a>&lt;'a&gt;","synthetic":false,"types":["libwgbuilder::models::allowed_ip::NewAllowedIp"]},{"text":"impl&lt;'a&gt; UndecoratedInsertRecord&lt;<a class=\"struct\" href=\"libwgbuilder/schema/client_allowed_ips/struct.table.html\" title=\"struct libwgbuilder::schema::client_allowed_ips::table\">table</a>&gt; for <a class=\"struct\" href=\"libwgbuilder/models/client_allowed_ip/struct.NewClientAllowedIp.html\" title=\"struct libwgbuilder::models::client_allowed_ip::NewClientAllowedIp\">NewClientAllowedIp</a>&lt;'a&gt;","synthetic":false,"types":["libwgbuilder::models::client_allowed_ip::NewClientAllowedIp"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()