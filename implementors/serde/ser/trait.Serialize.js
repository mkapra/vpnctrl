(function() {var implementors = {};
implementors["wireguard_builder_rs"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.135/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"wireguard_builder_rs/models/server/struct.ServerConfig.html\" title=\"struct wireguard_builder_rs::models::server::ServerConfig\">ServerConfig</a>","synthetic":false,"types":["wireguard_builder_rs::models::server::ServerConfig"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.135/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"wireguard_builder_rs/models/server/struct.ClientServerConfig.html\" title=\"struct wireguard_builder_rs::models::server::ClientServerConfig\">ClientServerConfig</a>","synthetic":false,"types":["wireguard_builder_rs::models::server::ClientServerConfig"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.135/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"wireguard_builder_rs/models/user/struct.User.html\" title=\"struct wireguard_builder_rs::models::user::User\">User</a>","synthetic":false,"types":["wireguard_builder_rs::models::user::User"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.135/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"wireguard_builder_rs/models/user/struct.JwtUser.html\" title=\"struct wireguard_builder_rs::models::user::JwtUser\">JwtUser</a>","synthetic":false,"types":["wireguard_builder_rs::models::user::JwtUser"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.135/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"wireguard_builder_rs/crypto/struct.Claims.html\" title=\"struct wireguard_builder_rs::crypto::Claims\">Claims</a>","synthetic":false,"types":["wireguard_builder_rs::crypto::Claims"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()